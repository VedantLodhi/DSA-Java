//  --------------------> OPTIMIZED APPROACH <--------------------

// TIME COMPLEXITY : 	O(n) , SPACE COMPLEXITY : O(1) 
 
class Solution 
{
    public int[] twoSum(int[] nums, int target) 
    {
        int i = 0;                      
        int j = nums.length - 1;        

        while (i < j) 
        {
            int sum = nums[i] + nums[j];

            if (sum < target) 
            {
                i++;    
            } else if (sum > target) 
            {
                j--;    
            } 
            else 
            {
                return new int[] {i + 1, j + 1};  
            }
        }

        return null;  
    }
}


//  --------------------> BRUTE FORCE APPROACH <--------------------

// TIME COMPLEXITY : 	O(nÂ²) , SPACE COMPLEXITY : O(1) 

class Solution
{
    public int[] twoSum(int[] nums, int target) 
{
        
        for (int i = 0; i < nums.length; i++)  
       {
         for (int j = i + 1; j < nums.length; j++) 
       {
                if (nums[i] + nums[j] == target) 
{
                    return new int[] {i+1, j+1};  
                }
            }
        }
        return null;
    }
}
